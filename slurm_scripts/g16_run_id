#!/bin/bash

work_dir=$(pwd)
user_name=$(whoami)

comfile=$(basename "$1")
combase=$(echo "$comfile" | cut -d . -f 1 -)

# Create the SLURM batch script on the fly
cat > ${combase}_batch.slurm <<EOF
#!/bin/bash
#SBATCH --partition=main
#SBATCH --job-name=Gaussian
#SBATCH --nodes=1
#SBATCH --ntasks=28
#SBATCH --mem=120000
#SBATCH --time=72:00:00
#SBATCH --output=${combase}_%j.out
#SBATCH --error=${combase}_%j.err
#SBATCH --mail-user=lwg17@scarletmail.rutgers.edu
#SBATCH --mail-type=END
#SBATCH --requeue



# ---- Queue/wait-time logging (single CSV in your home) ----
export SLURM_QUEUE_LOG="$HOME/slurm_wait_times.csv"
export LOG_ON_EXIT=1
source "$HOME/bin/slurm_queue_logger.sh" 2>/dev/null || echo "[warn] logger not found at $HOME/bin/slurm_queue_logger.sh"



work_dir=\$(pwd)

# Find number of processors
npp=\$(grep -i nproc "$comfile" | awk -F = '{print \$2}')
if [ -z "\$npp" ]; then
    npp=1
elif [ \$npp -gt 24 ]; then
    echo "Number of cores greater than 24. Please correct."
    exit
fi
echo "Number of cores set to: \$npp"

chkfile=\$(grep -i chk "$comfile" | awk -F = '{print \$2}')
fixchk=\$(echo \$chkfile | cut -d . -f 1 -).chk
echo "Check file requested: \$fixchk"

if [ ! -z "\$chkfile" ] && [ -e "\$work_dir/\$fixchk" ]; then
    cp "\$work_dir/\$fixchk" .
fi

g16 "$comfile"

mv ${combase}.log ${combase}_\${SLURM_JOB_ID}.log

if [ ! -z "\$chkfile" ] && [ -e "\$fixchk" ]; then
    cp "\$fixchk" "\$work_dir"
fi

hostname
date
EOF

# Submit the job
sbatch ${combase}_batch.slurm
