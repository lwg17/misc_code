#!/bin/bash
# PySCF SLURM wrapper (28 cores). Run from MD17/raw:
#   pyscf_run_28core calculate_hf.py ethanol [--start N --count M --shard-size K]
#   pyscf_run_28core calculate_pbe.py ethanol [--start N --count M --shard-size K]
#   pyscf_run_28core samples.py ethanol --size=30000

set -Eeuo pipefail

work_dir=$(pwd)

if [ -z "${1:-}" ]; then
  echo "Usage: $(basename "$0") <python_script.py> <molecule> [extra args...]"
  exit 1
fi

script="$1"
if [ ! -f "$script" ]; then
  echo "Error: '$script' not found in $work_dir"
  exit 2
fi

# Shift off script name; $1 is now the molecule
shift
mol="${1:-NA}"

script_base="$(basename "$script" .py)"
# Capture the rest of the args *before* the heredoc to avoid literal expansion
args="$@"

job_output=$(sbatch << EOF
#!/bin/bash
#SBATCH --partition=main
#SBATCH --job-name=${script_base}.${mol}
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=28
#SBATCH --mem=64000
#SBATCH --time=72:00:00
#SBATCH --output=${script_base}_${mol}_%j.out
#SBATCH --error=${script_base}_${mol}_%j.err
#SBATCH --export=ALL
#SBATCH --mail-user=lwg17@scarletmail.rutgers.edu
#SBATCH --mail-type=END
#SBATCH --requeue

# Optional queue logger
export SLURM_QUEUE_LOG="\$HOME/slurm_wait_times.csv"
export LOG_ON_EXIT=1
source "\$HOME/bin/slurm_queue_logger.sh" 2>/dev/null || true

# Threading
export OMP_NUM_THREADS=\${SLURM_CPUS_PER_TASK:-28}
export MKL_NUM_THREADS=\$OMP_NUM_THREADS
export OPENBLAS_NUM_THREADS=\$OMP_NUM_THREADS

# Env
module purge
module load python/3.8.2
source ~/.bashrc
conda activate pyscf

cd "$work_dir"
echo "CWD: \$(pwd)"
echo "Python: \$(python -V)"
echo "OMP_NUM_THREADS=\$OMP_NUM_THREADS"
echo "Running: python $script $args"

# Run: expand arguments captured before heredoc
python "$script" $args

hostname
EOF
)

jobid=$(echo "$job_output" | awk '{print $4}')
echo "$job_output"
echo "Submitted job ${jobid} for: $script $args"
echo "Logs: ${script_base}_${mol}_${jobid}.out / .err"
